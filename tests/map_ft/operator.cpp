#include "operator.hpp"

void    equal_map()
{
    std::cout << "Operator MAP" << std::endl;
    ft::map<std::string, int>    map_1;
    ft::map<std::string, int>    map_2;
    ft::map<std::string, int>    map_3;
    ft::map<std::string, int>    map_4;

    map_1["one"] = 1;
    map_1["two"] = 2;
    map_1["three"] = 3;
    map_2["four"] = 4;
    map_2["five"] = 5;
    map_3["one"] = 1;
    map_3["two"] = 2;
    map_3["three"] = 3;
    map_4["four"] = 4;
    map_4["five"] = 5;
    map_4["six"] = 3;
    std::cout << "==" << std::endl;
    std::cout << (map_1["one"] == map_2["two"]) << std::endl;
    std::cout << (map_2["two"] == map_1["one"]) << std::endl;
    std::cout << (map_1["one"] == map_3["three"]) << std::endl;
    std::cout << (map_1["one"] == map_4["four"]) << std::endl;
    std::cout << "!=" << std::endl;
    std::cout << (map_1["one"] != map_2["two"]) << std::endl;
    std::cout << (map_2["two"] != map_1["one"]) << std::endl;
    std::cout << (map_1["one"] != map_3["three"]) << std::endl;
    std::cout << (map_1["one"] != map_4["four"]) << std::endl;
    std::cout << "<" << std::endl;
    std::cout << (map_1["one"] < map_2["two"]) << std::endl;
    std::cout << (map_1["one"] < map_3["three"]) << std::endl;
    std::cout << (map_2["two"] < map_1["one"]) << std::endl;
    std::cout << (map_1["one"] < map_4["four"]) << std::endl;
    std::cout << (map_4["four"] < map_1["one"]) << std::endl;
    std::cout << "<=" << std::endl;
    std::cout << (map_1["one"] <= map_2["two"]) << std::endl;
    std::cout << (map_1["one"] <= map_3["three"]) << std::endl;
    std::cout << (map_2["two"] <= map_1["one"]) << std::endl;
    std::cout << (map_4["four"] <= map_1["one"]) << std::endl;
    std::cout << (map_1["one"] <= map_4["four"]) << std::endl;
    std::cout << ">" << std::endl;
    std::cout << (map_1["one"] > map_2["two"]) << std::endl;
    std::cout << (map_1["one"] > map_3["three"]) << std::endl;
    std::cout << (map_2["two"] > map_1["one"]) << std::endl;
    std::cout << (map_4["four"] > map_1["one"]) << std::endl;
    std::cout << (map_1["one"] > map_4["four"]) << std::endl;
    std::cout << ">=" << std::endl;
    std::cout << (map_1["one"] >= map_2["two"])<< std::endl;
    std::cout << (map_1["one"] >= map_3["three"])<< std::endl;
    std::cout << (map_2["two"] >= map_1["one"])<< std::endl;
    std::cout << (map_4["four"] >= map_1["one"])<< std::endl;
    std::cout << (map_1["one"] >= map_4["four"])<< std::endl;
    std::cout << "<=" << std::endl;
    std::cout << (map_1["one"] <= map_2["two"]) << std::endl;
    std::cout << (map_1["one"] <= map_3["three"]) << std::endl;
    std::cout << (map_2["two"] <= map_1["one"]) << std::endl;
    std::cout << (map_4["four"] <= map_1["one"]) << std::endl;
    std::cout << (map_1["one"] <= map_4["four"]) << std::endl;
    std::cout << ">=" << std::endl;
    std::cout << (map_1["one"] >= map_2["two"])<< std::endl;
    std::cout << (map_1["one"] >= map_3["three"])<< std::endl;
    std::cout << (map_2["two"] >= map_1["one"])<< std::endl;
    std::cout << (map_4["four"] >= map_1["one"])<< std::endl;
    std::cout << (map_1["one"] >= map_4["four"])<< std::endl;
}

void    non_member_operator_map()
{
    std::cout << "Non Member Operator MAP" << std::endl;
    ft::map<int, int>    map_1;
    ft::map<int, int>    map_2;
    ft::map<int, int>    map_3;
    ft::map<int, int>    map_4;

    map_1.insert(ft::make_pair(1, 2));
    map_1.insert(ft::make_pair(2, 3));
    map_1.insert(ft::make_pair(3, 4));
    map_2.insert(ft::make_pair(4, 5));
    map_2.insert(ft::make_pair(5, 6));
    map_3.insert(ft::make_pair(1, 2));
    map_3.insert(ft::make_pair(2, 3));
    map_3.insert(ft::make_pair(3, 4));
    map_4.insert(ft::make_pair(4, 5));
    map_4.insert(ft::make_pair(5, 6));
    map_4.insert(ft::make_pair(3, 1));
    std::cout << "==" << std::endl;
    std::cout << (map_1 == map_2) << std::endl;
    std::cout << (map_2 == map_1) << std::endl;
    std::cout << (map_1 == map_3) << std::endl;
    std::cout << (map_1 == map_4) << std::endl;
    std::cout << "!=" << std::endl;
    std::cout << (map_1 != map_2) << std::endl;
    std::cout << (map_2 != map_1) << std::endl;
    std::cout << (map_1 != map_3) << std::endl;
    std::cout << (map_1 != map_4) << std::endl;
    std::cout << "<" << std::endl;
    std::cout << (map_1 < map_2) << std::endl;
    std::cout << (map_1 < map_3) << std::endl;
    std::cout << (map_2 < map_1) << std::endl;
    std::cout << (map_1 < map_4) << std::endl;
    std::cout << (map_4 < map_1) << std::endl;
    std::cout << "<=" << std::endl;
    std::cout << (map_1 <= map_2) << std::endl;
    std::cout << (map_1 <= map_3) << std::endl;
    std::cout << (map_2 <= map_1) << std::endl;
    std::cout << (map_4 <= map_1) << std::endl;
    std::cout << (map_1 <= map_4) << std::endl;
    std::cout << ">" << std::endl;
    std::cout << (map_1 > map_2) << std::endl;
    std::cout << (map_1 > map_3) << std::endl;
    std::cout << (map_2 > map_1) << std::endl;
    std::cout << (map_4 > map_1) << std::endl;
    std::cout << (map_1 > map_4) << std::endl;
    std::cout << ">=" << std::endl;
    std::cout << (map_1 >= map_2)<< std::endl;
    std::cout << (map_1 >= map_3)<< std::endl;
    std::cout << (map_2 >= map_1)<< std::endl;
    std::cout << (map_4 >= map_1)<< std::endl;
    std::cout << (map_1 >= map_4)<< std::endl;
    std::cout << "<=" << std::endl;
    std::cout << (map_1 <= map_2) << std::endl;
    std::cout << (map_1 <= map_3) << std::endl;
    std::cout << (map_2 <= map_1) << std::endl;
    std::cout << (map_4 <= map_1) << std::endl;
    std::cout << (map_1 <= map_4) << std::endl;
    std::cout << ">=" << std::endl;
    std::cout << (map_1 >= map_2)<< std::endl;
    std::cout << (map_1 >= map_3)<< std::endl;
    std::cout << (map_2 >= map_1)<< std::endl;
    std::cout << (map_4 >= map_1)<< std::endl;
    std::cout << (map_1 >= map_4)<< std::endl;
}